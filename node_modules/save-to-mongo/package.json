{
  "name": "save-to-mongo",
  "description": "Save an object stream directly to MongoDB. Bulk modes supported (ordered / unordered) with configurable ops group size.",
  "version": "0.0.2",
  "main": "index.js",
  "author": {
    "name": "Michele Pangrazzi",
    "email": "xmikex83@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/mpangrazzi/save-to-mongo.git"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -t 10000"
  },
  "dependencies": {
    "debug": "^2.1.0",
    "mongodb": "^1.4.23"
  },
  "devDependencies": {
    "JSONStream": "^0.10.0",
    "mocha": "^2.0.1",
    "monk": "^0.9.1",
    "should": "^4.4.1"
  },
  "engines": {
    "node": ">= 0.10.x"
  },
  "keywords": [
    "mongodb",
    "stream",
    "writable",
    "save",
    "bulk",
    "ordered",
    "unordered"
  ],
  "readme": "Save-To-Mongo\n=============\n\nA Node.js Writable stream useful for saving (big) object streams directly to MongoDB.\n\nFeatures:\n\n- Connects to MongoDB using [node-mongodb-native](https://github.com/mongodb/node-mongodb-native)\n- Supports both [ordered an unordered](http://docs.mongodb.org/manual/core/bulk-write-operations/#ordered-vs-unordered-operations) bulk modes for fast inserts\n\n\n## Usage\n\nSee `/examples` folder. But basically:\n\n```js\nvar JSONStream = require('JSONStream');\nvar fs = require('fs');\nvar path = require('path');\n\n// init stream\n\nvar SaveToMongo = require('save-to-mongo');\n\nvar saveToMongo = SaveToMongo({\n  uri: 'mongodb://127.0.0.1:27017/test',\n  collection: 'savetomongo',\n  bulk: {\n    mode: 'unordered'\n  }\n});\n\n// go!!!\n\nfs.createReadStream(path.join(__dirname, './accounts.json'));\n  .pipe(JSONStream.parse('*'))\n  .pipe(saveToMongo)\n  .on('execute-error', function(err) {\n    console.log(err);\n  })\n  .on('done', function() {\n    console.log('All done!');\n    process.exit(0);\n  });\n```\n\nJSON random data was generated using [json-generator](http://www.json-generator.com).\n\n\n## Documentation\n\nTo obtain a `Save-To-Mongo` instance, you have to do:\n\n```js\n  var SaveToMongo = require('save-to-mongo');\n  var stream = SaveToMongo({ /* options */ });\n```\n\nstream available `options` are:\n\n- `uri` (String, required): MongoDB connection uri.\n- `collection` (String, required): MongoDB target collection.\n- `connection` (Object, optional): optional connection options. You can pass all options supported by [node-mongodb-native](https://github.com/mongodb/node-mongodb-native).\n- `streamOptions` (Object, optional): underlying Writable stream options. Default: `{ objectMode: true }`.\n- `bulk` (Object, optional): enables [bulk](http://docs.mongodb.org/manual/core/bulk-write-operations) mode. If you set this, you may want to set also:\n  - `mode`: (String, required): can be `ordered` or `unordered`. See MongoDB docs if you want more info on them.\n  - `bufferSize` (Number, required): By default all bulk operations are splitted in groups, each contains **1000** ops. Change this if you want a lower value.\n\n\n## Events\n\n#### \"write-error\"\n\nEmitted every time a MongoDB `insert` op fails (e.g: duplicate *_id*). Note that this will not *break* the stream.\n\n#### \"execute-error\"\n\nEmitted every time a MongoDB `execute` op fails. Note that this will not *break* the stream.\n\n#### \"done\"\n\nEmitted when all writes are executed (after stream's `finish` event).\n\n\n## Performance\n\nBoth bulk modes (expecially *unordered* mode) increases significantly `insert` speed.\n\nOn provided examples:\n\n```bash\n\n# for 100 records\n\ntime node ./examples/default.js # real: 0m0.450s\ntime node ./examples/unordered.js # real: 0m0.340s\n```\n\n**UPDATE**: for **100000** records (similar to the ones used in examples), using bulk unordered method drop execution time from 2:42m to 1:42m. Not bad :)\n\n## Debug\n\nThis module is built with [debug](https://github.com/visionmedia/debug), so you can inspect what's happening.\n\nOn examples, you can do:\n\n```bash\nDEBUG=save-to-mongo node ./exampes/default.js\n```\n\n\n## Install\n\nWith [npm](https://www.npmjs.com):\n\n```bash\nnpm install save-to-mongo\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mpangrazzi/save-to-mongo/issues"
  },
  "_id": "save-to-mongo@0.0.2",
  "dist": {
    "shasum": "f1bf0ae8955957a540c7cf9df88621117e596b27"
  },
  "_from": "save-to-mongo@",
  "_resolved": "https://registry.npmjs.org/save-to-mongo/-/save-to-mongo-0.0.2.tgz"
}
